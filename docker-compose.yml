version: '3.8'

services:
  # MongoDB database
  mongodb:
    image: mongo:latest
    container_name: eeg-mongodb
    restart: always
    ports:
      - "27018:27017"
    volumes:
      - mongodb_data:/data/db
      - ./mongo-init.js:/docker-entrypoint-initdb.d/mongo-init.js:ro
    environment:
      - MONGO_INITDB_ROOT_USERNAME=admin
      - MONGO_INITDB_ROOT_PASSWORD=password
      - MONGO_INITDB_DATABASE=eeg_database
    networks:
      - eeg-network

  # Backend API service
  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    container_name: eeg-backend
    restart: always
    ports:
      - "4000:5000"
    depends_on:
      - mongodb
    environment:
      - NODE_ENV=development
      - PORT=5000
      - MONGODB_URI=mongodb://admin:password@mongodb:27018/eeg_database?authSource=admin
      - JWT_SECRET=your_jwt_secret_key_change_this_in_production
      - UPLOAD_DIR=/app/uploads
    volumes:
      - ./backend:/app
      - /app/node_modules
      - eeg_uploads:/app/uploads
    networks:
      - eeg-network

  # Frontend web application
  #  frontend:
  #    build:
  #      context: ./frontend
  #      dockerfile: Dockerfile
  #    container_name: eeg-frontend
  #    restart: always
  #    ports:
  #      - "80:80"
  #    depends_on:
  #      - backend
  #    volumes:
  #      - ./frontend/nginx/nginx.conf:/etc/nginx/conf.d/default.conf
  #    networks:
  #      - eeg-network

  # Python service for EEG processing and ML
  #  eeg-processor:
  #    build:
  #      context: ./eeg-processor
  #      dockerfile: Dockerfile
  #    container_name: eeg-processor
  #    restart: always
  #    depends_on:
  #      - backend
  #    volumes:
  #      - eeg_uploads:/app/data
  #      - ./eeg-processor:/app
  #      - /app/__pycache__
  #    environment:
  #      - MONGODB_URI=mongodb://admin:password@mongodb:27018/eeg_database?authSource=admin
  #      - DATA_DIR=/app/data
  #    networks:
  #      - eeg-network

networks:
  eeg-network:
    driver: bridge

volumes:
  mongodb_data:
  eeg_uploads: